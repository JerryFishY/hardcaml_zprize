{1 Hardcaml Zprize Submission}

This documentation describes two projects undertaken as part of the Zprize competition in 2022.

Our submitted code is available on {{:https://github.com/fyquah/hardcaml_zprize} github here}!

{2 Multi-scalar multiplication}

The main submission document for msm is available with various design decisions
{{:https://github.com/fyquah/hardcaml_zprize/blob/master/zprize/msm_pippenger/README.md} on github as a README}

This is a competition to implement to multiply 2{^26} BLS12-377 affine points
by 253 bit scalars and add the result as fast as possible. This is the
submission for the FPGA track.

The main libraries that implements this include
- {!Msm_pippenger} implements the complete MSM computation using the Pippenger
  bucket method.
- {!Pippenger} implements the controller logic to sequence the MSM computation.
- {!Field_ops_lib} implements the core field arithmetic operations (modulo
  multiplications etc.)
- {!Twisted_edwards_lib} implements the mixed addition in the twisted edwards
  curve.

Some modules with interesting implementation are (but not limited to!):
- {!Twisted_edwards_lib.Mixed_add_precompute} - A fully pipelined mixed adder
  for points in the scaled twisted edwards curve with heavy precomputation.

{2 Inverse NTT}

Perform 2{^24} inverse number theoretic transform over a 64 bit finite field.

- {{!page:ntt}Hardcaml_ntt} implements the core components of for the NTT transform.
- {{!page:zprize_ntt_top}Zprize_ntt} implements the top level design and dicsusses results.

{2 Support libraries}

- {!Hardcaml_axi}
- {!Ark_bls12_377_g1}
- {!Twisted_edwards_lib}
- {!Field_ops_lib} - Library for operations in a Galois fields (eg:
  large-bit-width multiplication)
